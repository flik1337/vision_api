<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.flik1337.vision.mbg.mapper.FilmBroadcastMapper">
  <resultMap id="BaseResultMap" type="cn.flik1337.vision.mbg.model.FilmBroadcast">
    <id column="film_broadcast_id" jdbcType="INTEGER" property="filmBroadcastId" />
    <result column="film_id" jdbcType="INTEGER" property="filmId" />
    <result column="film_poster" jdbcType="VARCHAR" property="filmPoster" />
    <result column="film_video" jdbcType="VARCHAR" property="filmVideo" />
    <result column="remian" jdbcType="INTEGER" property="remian" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    film_broadcast_id, film_id, film_poster, film_video, remian
  </sql>
  <select id="selectByExample" parameterType="cn.flik1337.vision.mbg.model.FilmBroadcastExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from film_broadcast
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from film_broadcast
    where film_broadcast_id = #{filmBroadcastId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from film_broadcast
    where film_broadcast_id = #{filmBroadcastId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.flik1337.vision.mbg.model.FilmBroadcastExample">
    delete from film_broadcast
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.flik1337.vision.mbg.model.FilmBroadcast">
    <selectKey keyProperty="filmBroadcastId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into film_broadcast (film_id, film_poster, film_video, 
      remian)
    values (#{filmId,jdbcType=INTEGER}, #{filmPoster,jdbcType=VARCHAR}, #{filmVideo,jdbcType=VARCHAR}, 
      #{remian,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.flik1337.vision.mbg.model.FilmBroadcast">
    <selectKey keyProperty="filmBroadcastId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into film_broadcast
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="filmId != null">
        film_id,
      </if>
      <if test="filmPoster != null">
        film_poster,
      </if>
      <if test="filmVideo != null">
        film_video,
      </if>
      <if test="remian != null">
        remian,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="filmId != null">
        #{filmId,jdbcType=INTEGER},
      </if>
      <if test="filmPoster != null">
        #{filmPoster,jdbcType=VARCHAR},
      </if>
      <if test="filmVideo != null">
        #{filmVideo,jdbcType=VARCHAR},
      </if>
      <if test="remian != null">
        #{remian,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.flik1337.vision.mbg.model.FilmBroadcastExample" resultType="java.lang.Long">
    select count(*) from film_broadcast
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update film_broadcast
    <set>
      <if test="record.filmBroadcastId != null">
        film_broadcast_id = #{record.filmBroadcastId,jdbcType=INTEGER},
      </if>
      <if test="record.filmId != null">
        film_id = #{record.filmId,jdbcType=INTEGER},
      </if>
      <if test="record.filmPoster != null">
        film_poster = #{record.filmPoster,jdbcType=VARCHAR},
      </if>
      <if test="record.filmVideo != null">
        film_video = #{record.filmVideo,jdbcType=VARCHAR},
      </if>
      <if test="record.remian != null">
        remian = #{record.remian,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update film_broadcast
    set film_broadcast_id = #{record.filmBroadcastId,jdbcType=INTEGER},
      film_id = #{record.filmId,jdbcType=INTEGER},
      film_poster = #{record.filmPoster,jdbcType=VARCHAR},
      film_video = #{record.filmVideo,jdbcType=VARCHAR},
      remian = #{record.remian,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.flik1337.vision.mbg.model.FilmBroadcast">
    update film_broadcast
    <set>
      <if test="filmId != null">
        film_id = #{filmId,jdbcType=INTEGER},
      </if>
      <if test="filmPoster != null">
        film_poster = #{filmPoster,jdbcType=VARCHAR},
      </if>
      <if test="filmVideo != null">
        film_video = #{filmVideo,jdbcType=VARCHAR},
      </if>
      <if test="remian != null">
        remian = #{remian,jdbcType=INTEGER},
      </if>
    </set>
    where film_broadcast_id = #{filmBroadcastId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.flik1337.vision.mbg.model.FilmBroadcast">
    update film_broadcast
    set film_id = #{filmId,jdbcType=INTEGER},
      film_poster = #{filmPoster,jdbcType=VARCHAR},
      film_video = #{filmVideo,jdbcType=VARCHAR},
      remian = #{remian,jdbcType=INTEGER}
    where film_broadcast_id = #{filmBroadcastId,jdbcType=INTEGER}
  </update>
</mapper>